generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  fullName   String
  email      String    @unique
  password   String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
  isActive   Boolean?  @default(false)

  // Relacionamento
  couples1 Couple[] @relation("User1Couples") // Casais onde o usuário é user1
  couples2 Couple[] @relation("User2Couples") // Casais onde o usuário é user2

  addedGifts Gift[] // Presentes adicionados por esse usuário
}

model Couple {
  id        Int      @id @default(autoincrement())
  user1Id   Int
  user2Id   Int?
  createdAt DateTime @default(now())

  // Relacionamentos
  user1 User   @relation("User1Couples", fields: [user1Id], references: [id])
  user2 User?  @relation("User2Couples", fields: [user2Id], references: [id])
  gifts Gift[] // Presentes associados ao casal

  @@unique([user1Id, user2Id]) // Garante que um casal seja único
}

model Gift {
  id             Int      @id @default(autoincrement())
  coupleId       Int? // Associado ao casal
  title          String
  description    String?  @db.Text
  imageUrl       String?  @db.Text
  estimatedPrice Float?
  category       Int      @default(9)
  priority       Boolean  @default(false)
  createdAt      DateTime @default(now())

  // Relacionamento
  couple Couple? @relation(fields: [coupleId], references: [id])

  addedByUserId Int
  addedByUser   User @relation(fields: [addedByUserId], references: [id])
}
