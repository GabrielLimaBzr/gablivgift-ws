generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  fullName  String
  email     String    @unique
  password  String
  codeUser  String?   @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  isActive  Boolean?  @default(false)

  // Relacionamento
  couples1 Couple[] @relation("User1Couples") // Casais onde o usuário é user1
  couples2 Couple[] @relation("User2Couples") // Casais onde o usuário é user2

  addedGifts Gift[] // Presentes adicionados por esse usuário
}

model Couple {
  id        Int @id @default(autoincrement())
  senderId  Int
  reciverId Int

  status    Int?     @default(0) // "PENDING", "ACCEPTED", "REJECTED"
  createdAt DateTime @default(now())

  // Relacionamentos
  sender  User @relation("User1Couples", fields: [senderId], references: [id])
  reciver User @relation("User2Couples", fields: [reciverId], references: [id])

  @@unique([senderId, reciverId]) // Garante que um casal seja único
}

model Gift {
  id             Int      @id @default(autoincrement())
  title          String
  description    String?  @db.Text
  imageUrl       String?  @db.Text
  estimatedPrice Int?     @default(1)
  category       Int      @default(9)
  priority       Boolean  @default(false)
  createdAt      DateTime @default(now())

  userId      Int
  addedByUser User @relation(fields: [userId], references: [id])
}
